<project default="usage" basedir=".">

    <path id="compile.classpath">
        <fileset dir="./lib/endorsed">
            <include name="*.jar" />
        </fileset>
        <fileset dir="./lib">
            <include name="*.jar" />
        </fileset>
    </path>

    <path id="endorsed.classpath">
        <fileset dir="./lib/endorsed">
            <include name="*.jar" />
        </fileset>
    </path>

    <path id="test.classpath">
        <path refid="compile.classpath" />
        <fileset dir="./lib/test">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="./lib/tools">
            <include name="xalan*.jar" />
            <include name="xerces*.jar" />
        </fileset>
    </path>

    <path id="samples.classpath">
        <fileset dir="./lib/tools">
            <include name="**/*.jar" />
        </fileset>
        <path refid="test.classpath" />
        <pathelement location="."/>
    </path>

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->
  <target name="init">
    <tstamp/>
    <property name="Name" value="dom4j"/>
    <property name="name" value="dom4j"/>
    <property name="version" value="1.6.1"/>
    <property name="year" value="2005"/>

    <echo message="----------- ${Name} ${version} [${year}] ------------"/>

    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="off"/>

    <property name="src.dir" value="./src/java"/>
    <property name="conf.dir" value="./src/conf"/>
    <property name="doc.dir" value="./src/doc"/>
    <property name="samples.dir" value="./src/samples"/>
    <property name="test.dir" value="./src/test"/>
    <property name="lib.dir" value="./lib"/>
    <property name="packages" value="org.*"/>
    <property name="api.packages" value="org.dom4j,org.dom4j.dtd,org.dom4j.io,org.dom4j.rule,org.dom4j.datatype,org.dom4j.util"/>

    <property name="build.dir" value="./build"/>
    <property name="build.src" value="./build/src"/>
    <property name="build.dest" value="./build/classes"/>
    <property name="build.doc" value="./build/doc"/>
    <property name="build.apidocs" value="./build/doc/apidocs"/>
    <property name="build.javadocs" value="./build/doc/javadoc"/>
    <property name="build.generated.src" value="./build/generated"/>

    <property name="xml.format.options" value="-indentSize 2 -trimText -newlines"/>

    <filter token="year" value="${year}"/>
    <filter token="version" value="${version}"/>
    <filter token="date" value="${TODAY}"/>
    <filter token="log" value="true"/>
    <filter token="verbose" value="true"/>

    <!-- Gump support -->
    <property name="jaxen.src" value="../jaxen/jaxen/src/java/main"/>
  </target>

  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo message=""/>
    <echo message=""/>
    <echo message="dom4j build file"/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
    <echo message=" available targets are:"/>
    <echo message=""/>
    <echo message="   all      --> cleans then builds everything (default)"/>
    <echo message="   package  --> generates the dom4j.jar file"/>
    <echo message="   compile  --> compiles the source code"/>
    <echo message="   api      --> generates the API documentation"/>
    <echo message="   javadoc  --> generates the full JavaDoc documentation"/>
    <echo message="   clean    --> cleans up the directory"/>
    <echo message="   test     --> builds and runs the unit tests"/>
    <echo message="   demo-all --> runs the main standard sample programs"/>
    <echo message=""/>
    <echo message="-------------------------------------------------------------"/>
    <echo message=""/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the source code                                            -->
  <!-- =================================================================== -->
  <target name="prepare-src" depends="prepare">
    <!-- create directories -->
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>

    <!-- copy src files -->
    <copy todir="${build.src}">
      <!--fileset dir="${src.dir}" excludes="org/dom4j/persistence/**"/-->
      <fileset dir="${src.dir}"/>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the example code                                           -->
  <!-- =================================================================== -->
  <target name="prepare-samples" depends="prepare">
    <!-- create directories -->
    <mkdir dir="${build.src}"/>
    <mkdir dir="${build.dest}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile" depends="prepare-src">
    <javac srcdir="${build.src}"
           destdir="${build.dest}"
           debug="${debug}"
           optimize="${optimize}"
           target="1.3"
           source="1.3"
           deprecation="${deprecation}"
           classpathref="compile.classpath">
    </javac>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the test directory                                         -->
  <!-- =================================================================== -->
  <target name="compile-test" depends="compile">
    <javac srcdir="${test.dir}"
           destdir="${build.dest}"
           debug="${debug}"
           optimize="${optimize}"
           deprecation="${deprecation}"
           classpathref="test.classpath">
    </javac>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the samples directory                                       -->
  <!-- =================================================================== -->
  <target name="samples" depends="compile,prepare-samples,prepare-jaxb">
    <javac srcdir="src/samples"
           destdir="${build.dest}"
           debug="${debug}"
           optimize="${optimize}"
           classpathref="samples.classpath">
    </javac>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the class package                                           -->
  <!-- =================================================================== -->
  <target name="package" depends="compile">
    <jar jarfile="${build.dir}/${name}.jar"
         basedir="${build.dest}"
         includes="org/dom4j/**"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
  <target name="javadoc" depends="prepare-src">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="${packages}"
             sourcepath="${build.src}"
             destdir="${build.javadocs}"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${Name} Full JavaDoc"
             doctitle="${Name}"
             bottom="Copyright &#169; ${year} MetaStuff Ltd. All Rights Reserved. Hosted by &lt;p&gt; &lt;img src='http://sourceforge.net/sflogo.php?group_id=16035' width='88' height='31' border='0' alt='SourceForge Logo' /&gt;"
             stylesheetfile="${doc.dir}/style/javadoc.css">
    </javadoc>
  </target>


  <!-- JavaDoc generated by a release which links to JDK and JAXP Javadoc -->
  <target name="release-javadoc" depends="prepare-src">
    <mkdir dir="${build.javadocs}"/>
    <javadoc packagenames="${packages}"
             sourcepath="${build.src}"
             destdir="${build.javadocs}"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${Name} Full JavaDoc"
             doctitle="${Name}"
             bottom="Copyright &#169; ${year} MetaStuff Ltd. All Rights Reserved. Hosted by &lt;p&gt; &lt;img src='http://sourceforge.net/sflogo.php?group_id=16035' width='88' height='31' border='0' alt='SourceForge Logo' /&gt;"
             stylesheetfile="${doc.dir}/style/javadoc.css">
      <link href="http://java.sun.com/j2se/1.4.2/docs/api"/>
      <link href="http://java.sun.com/xml/jaxp-docs-1.1/docs/api"/>
    </javadoc>

    <mkdir dir="${build.apidocs}"/>
    <javadoc packagenames="${api.packages}"
             sourcepath="${build.src}"
             destdir="${build.apidocs}"
             author="true"
             version="true"
             use="true"
             splitindex="true"
             noindex="false"
             windowtitle="${Name} API"
             doctitle="${Name}"
             bottom="Copyright &#169; ${year} MetaStuff Ltd. All Rights Reserved. Hosted by &lt;p&gt; &lt;img src='http://sourceforge.net/sflogo.php?group_id=16035' width='88' height='31' border='0' alt='SourceForge Logo' /&gt;"
             stylesheetfile="${doc.dir}/style/javadoc.css">
      <link href="http://java.sun.com/j2se/1.4.2/docs/api"/>
      <link href="http://java.sun.com/xml/jaxp-docs-1.1/docs/api"/>
      <link href="${build.javadocs}"/>
    </javadoc>
  </target>

  <!-- =================================================================== -->
  <!-- Support for a Gump build                                            -->
  <!-- =================================================================== -->
  <target name="gump" depends="prepare-gump, test, package">
  </target>

  <target name="prepare-gump" depends="init">
    <!-- create directories -->
    <mkdir dir="${build.src}"/>

    <!-- copy src files -->
    <copy todir="${build.src}">
      <fileset dir="${jaxen.src}" includes="org/jaxen/dom4j/**"/>
    </copy>
  </target>

  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete dir="${build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Unit Testing Targets                                                -->
  <!-- =================================================================== -->
  <target name="test" depends="compile-test">
    <mkdir dir="${build.dir}/test-results/xml"/>
    <junit printsummary="yes" haltonfailure="yes">
      <formatter type="xml"/>

      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="test.classpath" />
      </classpath>

      <batchtest fork="yes" todir="${build.dir}/test-results/xml">
        <fileset dir="${test.dir}">
          <include name="**/*Test.java" />
          <exclude name="**/AllTests.java,**/Abstract*.java,**/TestCase.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="test-report" depends="test">
    <mkdir dir="${build.dir}/test-results"/>
    <junitreport todir="${build.dir}/test-results">
      <fileset dir="${build.dir}/test-results/xml">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${build.dir}/test-results/html"/>
    </junitreport>
  </target>

  <!-- =================================================================== -->
  <!-- Helper targets                                                      -->
  <!-- =================================================================== -->
  <target name="all" depends="clean,package,javadoc">
  </target>

  <!-- =================================================================== -->
  <!-- Run sample programs                                                 -->
  <!-- =================================================================== -->
  <target name="demo-sax" depends="samples">
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/web.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/cdata.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/testPI.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/test/test_schema.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>
	
  <target name="prepare-jaxb" depends="prepare-samples">
    <path id="classpath.jaxb">
      <pathelement location="./lib/tools/jaxme-0.3.jar"/>
      <pathelement location="./lib/tools/jaxme-js-0.3.jar"/>
      <pathelement location="./lib/tools/jaxme-xs-0.3.jar"/>
      <pathelement location="./lib/jaxme-api-0.3.jar"/>
    </path>

    <taskdef name="xjc" classname="org.apache.ws.jaxme.generator.XJCTask">
      <classpath refid="classpath.jaxb" />
    </taskdef>
  	
    <mkdir dir="${build.generated.src}"/>
  	  		
    <xjc schema="xml/jaxb/primer.xsd" target="${build.generated.src}" package="org.dom4j.test.primer">
      <produces dir="${build.generated.src}" />
    </xjc>
  	
    <javac destdir="${build.dest}">
      <src path="${build.generated.src}"/>
      <classpath>
        <path refid="classpath.jaxb"/>
        <!--path refid="test.classpath"/-->
      </classpath>
    </javac>
  	
    <copy todir="${build.dest}">
      <fileset dir="${build.generated.src}">
        <include name="**/jaxb.properties" />
        <include name="**/Configuration.xml" />
      </fileset>
    </copy>
  </target>
	
  <target name="demo-jaxb" depends="samples">	  	
    <java classname="org.dom4j.samples.jaxb.JAXBDemo" >
      <classpath>
        <path refid="classpath.jaxb" />
        <path refid="samples.classpath" />
      	<pathelement location="${build.dest}" />
      </classpath>
    </java>
  </target>

  <target name="demo-pull" depends="samples">
    <java classname="org.dom4j.samples.PullParserDemo" args="${xml.format.options} xml/web.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
    <java classname="org.dom4j.samples.PullParserDemo" args="${xml.format.options} xml/fibo.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-sax2" depends="samples">
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/xhtml/xhtml-basic.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-sax-contents" depends="samples">
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/contents.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-sax-cdata" depends="samples">
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/cdata.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/cdata.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
      <sysproperty key="org.xml.sax.driver" value="org.apache.xerces.parsers.SAXParser"/> 
    </java>
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/cdata.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
      <sysproperty key="org.xml.sax.driver" value="xml.aelfred2.SAXDriver"/> 
    </java>
  </target>

  <target name="demo-sax-pi" depends="samples">
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/testPI.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-sax-ns" depends="samples">
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/namespaces.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/testNamespaces.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-saxall" depends="demo-sax,demo-sax-contents,demo-sax-cdata,demo-sax-pi,demo-sax-ns">
    <java classname="org.dom4j.samples.SAXDemo" args="${xml.format.options} xml/inline.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-dom" depends="samples">
    <java classname="org.dom4j.samples.dom.DOMDemo" args="xml/contents.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-saxdom" depends="samples">
    <java classname="org.dom4j.samples.dom.SAXDOMDemo" args="xml/contents.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-jtidy" depends="samples">
    <java classname="org.dom4j.samples.JTidyDemo" args="${xml.format.options} readme.html">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-visitor" depends="samples">
    <java classname="org.dom4j.samples.VisitorDemo" args="xml/cdata.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-count" depends="samples">
    <java classname="org.dom4j.samples.CountDemo" args="xml/fibo.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-create" depends="samples">
    <java classname="org.dom4j.samples.CreateXMLDemo">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-html" depends="samples">
    <java classname="org.dom4j.samples.HTMLWriterDemo" args="xml/xhtml.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="test-performance" depends="samples">
    <java classname="org.dom4j.samples.PerformanceTest" args="xml/periodic_table.xml org.dom4j.DocumentFactory 10">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>

    <java classname="org.dom4j.samples.PerformanceTest" args="xml/periodic_table.xml org.dom4j.DocumentFactory 10">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
      <sysproperty key="org.xml.sax.driver" value="org.apache.xerces.parsers.SAXParser"/> 
    </java>

    <java classname="org.dom4j.samples.PerformanceTest" args="xml/periodic_table.xml org.dom4j.DocumentFactory 10">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
      <sysproperty key="org.xml.sax.driver" value="xml.aelfred2.SAXDriver"/> 
    </java>

    <java classname="org.dom4j.samples.PerformanceTest" args="xml/much_ado.xml org.dom4j.DocumentFactory 10">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>

    <java classname="org.dom4j.samples.PerformanceTest" args="xml/much_ado.xml org.dom4j.DocumentFactory 10">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
      <sysproperty key="org.xml.sax.driver" value="org.apache.xerces.parsers.SAXParser"/> 
    </java>

    <java classname="org.dom4j.samples.PerformanceTest" args="xml/much_ado.xml org.dom4j.DocumentFactory 10">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
      <sysproperty key="org.xml.sax.driver" value="xml.aelfred2.SAXDriver"/> 
    </java>
  </target>

  <target name="demo-xpath" depends="samples">
    <java classname="org.dom4j.samples.XPathDemo" args="xml/web.xml //servlet/servlet-class">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
    <java classname="org.dom4j.samples.XPathDemo" args="xml/much_ado.xml //ACT/TITLE">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-xslt" depends="samples">
    <java classname="org.dom4j.samples.XSLTDemo" args="xml/nitf/sample.xml xml/nitf/ashtml.xsl">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-domxslt" depends="samples">
    <java classname="org.dom4j.samples.dom.XSLTNativeDOMDemo" args="xml/nitf/sample.xml xml/nitf/ashtml.xsl">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-bigdoc" depends="samples">
    <java classname="org.dom4j.samples.LargeDocumentDemo" args="xml/much_ado.xml /PLAY/ACT">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>
  
  <target name="demo-bigdoc2" depends="samples">
    <java classname="org.dom4j.samples.LargeDocumentDemo2" args="xml/much_ado.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-link" depends="samples">
    <java classname="org.dom4j.samples.LinkChecker" args="xml/xhtml/xhtml-basic.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-bean" depends="samples">
    <java classname="org.dom4j.samples.bean.BeanDemo" args="xml/bean/gui.xml">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-validate" depends="samples">
    <java classname="org.dom4j.samples.validate.XercesDemo" fork="yes">
      <arg value="xml/schema/invalid.xml"/>
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-saxvalidate" depends="samples">
    <java classname="org.dom4j.samples.validate.SAXValidatorDemo" fork="yes">
      <arg value="xml/nitf/invalid.xml"/>
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-schema" depends="samples">
    <java classname="org.dom4j.samples.VisitorDemo">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
      <sysproperty key="org.dom4j.factory" value="org.dom4j.datatype.DatatypeDocumentFactory"/>
      <arg line="xml/schema/personal-schema.xml"/>
    </java>
  </target>

  <target name="demo-table" depends="samples">
    <java classname="org.dom4j.samples.swing.JTableDemo" args="xml/web.xml" fork="yes">
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>

  <target name="demo-tabletool" depends="samples">
    <java classname="org.dom4j.samples.swing.JTableTool" fork="yes">
      <arg line="xml/swing/tableForAtoms.xml"/>
      <arg line="xml/periodic_table.xml"/>
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>


  <target name="demo-swing" depends="samples">
    <java classname="org.dom4j.samples.swing.JTreeDemo" fork="true">
      <arg line="xml/web.xml"/>
      <classpath>
        <pathelement location="${build.dest}" />
        <path refid="samples.classpath" />
      </classpath>
    </java>
  </target>


  <target name="demo-all" depends="demo-sax,demo-visitor,demo-count,demo-xpath,demo-html,demo-schema"/>
</project>
